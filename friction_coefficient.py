# -*- coding: utf-8 -*-
"""
Created on Mon Sep  6 12:39:20 2021

@author: Riccardo
"""
from CoolProp.CoolProp import PropsSI
import numpy as np

def friction_coeff_tube(Re):
    if Re <= 2000:
        f = 7.8619*Re**(-0.999)
    elif Re >= 4000:
        f = 0.0391*Re**(-0.228)
    else:
        f_2000 = 7.8619*2000**(-0.999)
        f_4000 = 0.0391*4000**(-0.228)
        m = (f_4000 - f_2000) / (4000 - 2000)
        q = f_2000 - m*2000
        f = m*Re + q
    return f

def friction_coeff_shell(Re,baffle_cut):
    # Il fattore f si ottiene con una relazione del tipo f = K*Re**T, con K e T variabili con il numero di Re e con il "buffle cut"
    if baffle_cut == 15:
        if Re <= 2000:
            f = 30.208*Re**(-0.946)
        elif Re >= 4000:
            f = 0.3211*Re**(-0.167)
        else:
            f_2000 = 30.208*2000**(-0.946)
            f_4000 = 0.3211*4000**(-0.167)
            m = (f_4000 - f_2000) / (4000 - 2000)
            q = f_2000 - m*2000
            f = m*Re + q
            
    elif baffle_cut == 20:
        if Re <= 2000:
            f = (30.208*Re**(-0.946) + 18.383*Re**(-0.924)) / 2
        elif Re >= 4000:
            f = (0.3211*Re**(-0.167) + 0.2149*Re**(-0.16)) / 2
        else:
            f_2000 = (30.208*2000**(-0.946) + 18.383*2000**(-0.924)) / 2
            f_4000 = (0.3211*4000**(-0.167) + 0.2149*4000**(-0.16)) / 2
            m = (f_4000 - f_2000) / (4000 - 2000)
            q = f_2000 - m*2000
            f = m*Re + q
            
    elif baffle_cut == 25:
        if Re <= 2000:
            f = 18.383*Re**(-0.924)
        elif Re >= 4000:
            f = 0.2149*Re**(-0.16)
        else:
            f_2000 = 18.383*2000**(-0.924)
            f_4000 = 0.2149*4000**(-0.16)
            m = (f_4000 - f_2000) / (4000 - 2000)
            q = f_2000 - m*2000
            f = m*Re + q
            
    elif baffle_cut == 30:
         if Re <= 2000:
            f = (18.383*Re**(-0.924) + 15.687*Re**(-0.921)) / 2
         elif Re >= 4000:
            f = (0.2149*Re**(-0.16) + 0.2077*Re**(-0.174)) / 2
         else:
            f_2000 = (18.383*2000**(-0.924) + 15.687*2000**(-0.921)) / 2
            f_4000 = (0.2149*4000**(-0.16) + 0.2077*4000**(-0.174)) / 2
            m = (f_4000 - f_2000) / (4000 - 2000)
            q = f_2000 - m*2000
            f = m*Re + q
            
    elif baffle_cut == 35:
        if Re <= 2000:
            f = 15.687*Re**(-0.921)
        elif Re >= 4000:
            f = 0.2077*Re**(-0.174)
        else:
            f_2000 = 15.687*2000**(-0.921)
            f_4000 = 0.2077*4000**(-0.174)
            m = (f_4000 - f_2000) / (4000 - 2000)
            q = f_2000 - m*2000
            f = m*Re + q
            
    elif baffle_cut == 40:
         if Re <= 2000:
            f = (15.687*Re**(-0.921) + 12.479*Re**(-0.912)) / 2
         elif Re >= 4000: 
            f = (0.2077*Re**(-0.174) + 0.1864*Re**(-0.185)) / 2 
         else:
            f_2000 = (15.687*2000**(-0.921) + 12.479*2000**(-0.912)) / 2
            f_4000 = (0.2077*4000**(-0.174) + 0.1864*4000**(-0.185))/ 2
            m = (f_4000 - f_2000) / (4000 - 2000)
            q = f_2000 - m*2000
            f = m*Re + q
        
    elif baffle_cut == 45:
        if Re <= 2000:
            f = 12.479*Re**(-0.912)
        elif Re >= 4000:
            f = 0.1864*Re**(-0.185)
        else:
            f_2000 = 12.479*2000**(-0.912)
            f_4000 = 0.1864*4000**(-0.185)
            m = (f_4000 - f_2000) / (4000 - 2000)
            q = f_2000 - m*2000
            f = m*Re + q
            
    return f